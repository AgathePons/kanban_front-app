!function(){const t={makeTagInCardInDOM:function(e,o){const a=document.querySelector(`.box[data-card-id="${e}"] .card-tag-bloc`),d=document.createElement("span");d.classList.add("tag","is-link"),d.textContent=o.name,d.style.backgroundColor=o.color,d.dataset.tagId=o.id,d.addEventListener("dblclick",t.removeTagFromCard),a.appendChild(d)},makeTagSelectModalInDOM:function(t){const e=document.createElement("option");e.textContent=t.name,e.value=t.id,document.getElementById("addTagToCard").querySelector(".tag-list-select").appendChild(e)},showAddTagCardModal:function(t){const e=t.target.closest(".box").dataset.cardId,o=document.getElementById("addTagToCard");o.querySelector("form").dataset.cardId=e,o.classList.add("is-active")},handleAddTagToCardForm:async function(e){e.preventDefault();const o=e.target.dataset.cardId,a=new FormData(e.target);try{const e=await fetch(`${utilsModule.base_url}cards/${o}/tags`,{method:"POST",body:a});if(200===e.status){const d=await e.json(),n=(d.tags,d.tags.find(t=>t.id==a.get("id")));t.makeTagInCardInDOM(o,n)}else console.log("post /cards something went wrond");utilsModule.hideModals()}catch(d){console.error("handle tag to card form:",d)}},removeTagFromCard:async function(t){const e=t.target,o=e.dataset.tagId,a=t.target.closest(".box").dataset.cardId;try{200===(await fetch(`${utilsModule.base_url}cards/${a}/tags/${o}`,{method:"DELETE"})).status?e.remove():console.log("delete /cards something went wrond")}catch(d){console.error("remove tag:",d)}}};var e=t;var o={base_url:"http://localhost:3000/",hideModals:function(){document.querySelectorAll(".modal").forEach(t=>t.classList.remove("is-active"))}};const a={makeCardInDOM:function(t){const o=document.getElementById("cardTemplate"),d=document.importNode(o.content,!0),n=d.querySelector(".box");d.querySelector(".card-title").textContent=t.content,n.dataset.cardId=t.id,n.style.backgroundColor=t.color,n.querySelector('.edit-card-form input[name="card-id"]').value=t.id,n.querySelector('.edit-card-form input[name="content"]').value=t.content,n.querySelector('.edit-card-form input[name="color"]').value=t.color,n.querySelector(".edit-card-btn").addEventListener("click",a.showEditCard),n.querySelector(".delete-card-btn").addEventListener("click",a.deleteCard),n.querySelector(".edit-card-form").addEventListener("submit",a.handleEditCardForm),n.querySelector(".add-tag-card-btn").addEventListener("click",e.showAddTagCardModal),document.querySelector(`.panel[data-list-id="${t.list_id}"]`).querySelector(".card-container").appendChild(d)},showAddCardModal:function(t){const e=t.target.closest(".panel").getAttribute("data-list-id"),o=document.getElementById("addCardModal");o.querySelector(".hidden-input").setAttribute("value",e),o.classList.add("is-active")},handleAddCardForm:async function(t){t.preventDefault();try{const e=new FormData(t.target),d=await fetch(o.base_url+"cards",{method:"POST",body:e});if(201===d.status){const t=await d.json();a.makeCardInDOM(t)}else console.log("post /cards something went wrond");o.hideModals()}catch(e){console.error("handle card form:",e)}},showEditCard:function(t){console.log("clic edit card btn");const e=t.target.closest(".box");e.querySelector(".card--content").classList.add("is-hidden"),e.querySelector(".edit-card-form").classList.remove("is-hidden")},hideEditCard:function(t){const e=document.querySelector(`.box[data-card-id="${t}"]`);e.querySelector(".card--content").classList.remove("is-hidden"),e.querySelector(".edit-card-form").classList.add("is-hidden")},handleEditCardForm:async function(t){t.preventDefault();const e=new FormData(t.target),d=t.target.closest(".box"),n=e.get("card-id"),r=d.querySelector(".card-title");try{200===(await fetch(`${o.base_url}cards/${n}`,{method:"PATCH",body:e})).status?(r.textContent=e.get("content"),d.style.backgroundColor=e.get("color"),a.hideEditCard(n)):console.log("post /cards something went wrond")}catch(s){console.error("handle edit card form:",s)}},onCardDrop:async function(t){const e=t.from,o=t.to,d=e.querySelectorAll(".box");await a.moveCards(d);const n=o.querySelectorAll(".box");await a.moveCards(n)},moveCards:async function(t){t.forEach(async(t,e)=>{const a=t.dataset.cardId,d=t.closest(".panel").dataset.listId,n=new FormData;n.append("position",e),n.append("list_id",d);try{await fetch(`${o.base_url}cards/${a}`,{method:"PATCH",body:n})}catch(r){console.error("on card drag n drop:",r)}})},deleteCard:async function(t){t.preventDefault();const e=t.target.closest(".box"),a=e.dataset.cardId;try{204===(await fetch(`${o.base_url}cards/${a}`,{method:"DELETE"})).status?e.remove():console.log("delete /cards something went wrond")}catch(d){console.error("delete card btn:",d)}}};var d=a;const n={makeListInDOM:function(t){const e=document.getElementById("listTemplate"),o=document.importNode(e.content,!0),a=o.querySelector(".panel");a.dataset.listId=t.id,a.id=t.id,o.querySelector(".list-title").textContent=t.name,a.querySelector('.edit-list-form input[name="name"]').value=t.name,a.querySelector('.edit-list-form input[name="list-id"]').value=t.id;const r=o.querySelector(".card-container");new Sortable(r,{group:"list",draggable:".box",onEnd:d.onCardDrop}),o.querySelector(".add-card-btn").addEventListener("click",d.showAddCardModal),o.querySelector(".list-title").addEventListener("dblclick",n.showEditList),o.querySelector(".edit-list-form").addEventListener("submit",n.handleEditListForm),o.querySelector(".delete-list-btn").addEventListener("click",n.deleteList),document.getElementById("kabanBoard").appendChild(o)},showAddListModal:function(){document.getElementById("addListModal").classList.add("is-active")},handleAddListForm:async function(t){t.preventDefault();const e=new FormData(t.target);if(!e.get("name"))return console.warn("Le nom de la liste ne doit pas \xeatre vide");const a=await fetch(o.base_url+"lists",{method:"POST",body:e});if(201===a.status){const t=await a.json();n.makeListInDOM(t)}else console.log("post /lists something went wrond");o.hideModals()},showEditList:function(t){t.target.classList.add("is-hidden"),t.target.parentNode.querySelector(".edit-list-form").classList.remove("is-hidden")},hideEditList:function(t){const e=document.querySelector(`.panel[data-list-id="${t}"]`);e.querySelector(".list-title").classList.remove("is-hidden"),e.querySelector(".edit-list-form").classList.add("is-hidden")},handleEditListForm:async function(t){t.preventDefault();const e=new FormData(t.target),a=e.get("list-id"),d=t.target.closest(".panel").querySelector(".list-title");try{200===(await fetch(`${o.base_url}lists/${a}`,{method:"PATCH",body:e})).status?(d.textContent=e.get("name"),n.hideEditList(a)):console.log("post /cards something went wrong")}catch(r){console.error("handle edit list form:",r)}},deleteList:async function(t){t.preventDefault();const e=t.target.closest(".panel"),a=e.dataset.listId;if(e.querySelector(".box"))return alert("Impossible de supprimer cette liste car elle n'est pas !");if(confirm("Voulez-vous vraiment supprimer cette liste ?"))try{204===(await fetch(`${o.base_url}lists/${a}`,{method:"DELETE"})).status?e.remove():console.log("delete /lists something went wrond")}catch(d){console.error("delete list btn:",d)}}};var r=n;const s={addListenerToAction:function(){document.getElementById("addListButton").addEventListener("click",r.showAddListModal),document.querySelectorAll(".close").forEach(t=>t.addEventListener("click",o.hideModals)),document.querySelector("#addListModal form").addEventListener("submit",r.handleAddListForm),document.querySelector("#addCardModal form").addEventListener("submit",d.handleAddCardForm),document.querySelector("#addTagToCard form").addEventListener("submit",e.handleAddTagToCardForm)},getListsFromAPI:async function(){try{const t=await fetch(o.base_url+"lists",{method:"GET"});if(200===t.status){const o=await t.json();for(const t of o){r.makeListInDOM(t);for(const o of t.cards){d.makeCardInDOM(o);for(const t of o.tags)e.makeTagInCardInDOM(o.id,t)}}}else console.log("get lists and cards: something went wrong")}catch(t){console.error("get all lists:",t)}},getTagsFromAPI:async function(){try{const t=await fetch(o.base_url+"tags",{method:"GET"});if(200===t.status){const o=await t.json();for(const t of o)e.makeTagSelectModalInDOM(t)}else console.log("get lists and cards: something went wrong")}catch(t){console.error("get all lists:",t)}},init:function(){s.getListsFromAPI(),s.getTagsFromAPI(),s.addListenerToAction(),new Sortable(kabanBoard,{animation:150,ghostClass:"blue-background-class"})}};document.addEventListener("DOMContentLoaded",s.init)}();